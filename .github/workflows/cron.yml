on:
  push:
  schedule:
    - cron: "0,30 * * * *"

name: "conventions"

jobs:
  update-cci-fork:
    name: "Update CCI fork"
    runs-on: ubuntu-20.04
    if: github.event_name != 'push' || github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: "0"
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: "Update CCI fork with upstream changes"
      env:
        GIT_GITHUB_USERNAME: ${{ secrets.GIT_GITHUB_USERNAME }}
        GIT_GITHUB_TOKEN: ${{ secrets.GIT_GITHUB_TOKEN }}
        GIT_GITHUB_FORK_ACCOUNT: "bincrafters"
      run: |
        chmod +x ./cci/update_from_upstream.sh
        source ./cci/update_from_upstream.sh
  run-conventions-for-bincrafters:
    name: "Run Conventions for Bincrafters"
    runs-on: ubuntu-20.04
    if: github.event_name != 'push' && github.repository_owner == 'bincrafters'
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: "Run Conventions"
      env:
        GIT_GITHUB_USERNAME: ${{ secrets.GIT_GITHUB_USERNAME }}
        GIT_GITHUB_TOKEN: ${{ secrets.GIT_GITHUB_TOKEN }}
      run: |
        git config --global user.email "bincrafters@gmail.com"
        git config --global user.name "bincrafters-user"
        pip install --quiet bincrafters-conventions
        conan user
        bincrafters-conventions --remote bincrafters --remote-max-repos 1 --remote-token="${GIT_GITHUB_USERNAME}:${GIT_GITHUB_TOKEN}";
  bincrafters-conventions-test-v2:
    name: Test with Conan v2 on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "windows-2019", "macos-11.0"]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: "Build & Test"
      run: |
        pip install -e .[test]
        pip uninstall -y conan
        pip install conan=="2.*"
        python setup.py sdist
        cd tests
        pytest -v -s --cov=bincrafters_conventions
        mv .coverage ..
        cd ..
        codecov
  bincrafters-conventions-test-v1:
    name: Test with Conan v1 on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "windows-2019", "macos-11.0"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    - name: "Build & Test"
      run: |
        pip install -e .[test]
        pip uninstall -y conan
        pip install conan=="1.*"
        python setup.py sdist
        cd tests
        pytest -v -s --cov=bincrafters_conventions
        mv .coverage ..
        cd ..
        codecov
  bincrafers-conventions-deploy:
    name: Deploy Conventions to PyPi
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: bincrafters-conventions-test-v1
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Build
      run: |
        python setup.py sdist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
